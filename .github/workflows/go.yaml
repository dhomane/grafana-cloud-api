---

name: Go

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    branches:
      - master

jobs:
  validate:
    name: Validate source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Lint
        run: |
          go get -u golang.org/x/lint/golint
          golint -set_exit_status ./...

      - name: Vet
        run: go vet ./... | grep ':' && false || true

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -cover -coverprofile /tmp/profile.cov ./...

      - name: Upload test coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: /tmp/profile.cov
        if: github.event_name != 'pull_request'

  build:
    name: Build artifacts
    if: startsWith(github.ref, 'refs/tags/v')
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
            arm: ""
            extension: ""
          - os: linux
            arch: amd64
            arm: ""
            extension: ""
          - os: linux
            arch: arm
            arm: 5
            extension: ""
          - os: linux
            arch: arm
            arm: 6
            extension: ""
          - os: linux
            arch: arm64
            arm: ""
            extension: ""
          - os: windows
            arch: 386
            arm: ""
            extension: .exe
          - os: windows
            arch: amd64
            arm: ""
            extension: .exe
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Get tag name
        id: tag
        run: |
          echo ::set-output name=tag_name::${GITHUB_REF#refs/tags/v}

      - name: Get file name
        id: file
        run: |
          echo ::set-output name=file_name::gcapi-cli-${{ steps.tag.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.arm }}${{ matrix.extension }}

      - name: Build
        run: >
          GOOS="${{ matrix.os }}"
          GOARCH="${{ matrix.arch }}"
          GOARM="${{ matrix.arm }}"
          CGO_ENABLED=0
          go build
          -ldflags='-s -w -X github.com/jtyr/gcapi/pkg/version.Version=${{ steps.tag.outputs.tag_name }}'
          -o /tmp/${{ steps.file.outputs.file_name }}
          ./main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: gcapi-cli-${{ steps.tag.outputs.tag_name }}
          path: /tmp/${{ steps.file.outputs.file_name }}
          retention-days: 1

  release:
    name: Release all built artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: tag
        run: |
          echo ::set-output name=tag_name::${GITHUB_REF#refs/tags/v}

      - name: Download all workflow artifacts
        uses: actions/download-artifact@v2
        with:
          name: gcapi-cli-${{ steps.tag.outputs.tag_name }}
          path: /tmp/files

      - name: Create checksum file
        working-directory: /tmp/files
        run: |
          sha256sum * | sort -k2 > gcapi-cli-${{ steps.tag.outputs.tag_name }}-checksums-sha256.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/files/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
